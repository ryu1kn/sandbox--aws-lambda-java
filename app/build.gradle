plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.21'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
    runtimeOnly 'com.amazonaws:aws-lambda-java-log4j2:1.2.0'
    implementation platform('org.apache.logging.log4j:log4j-bom:2.14.1')
    implementation 'org.apache.logging.log4j:log4j-api'
    implementation 'org.apache.logging.log4j:log4j-core'
    implementation 'org.apache.logging.log4j:log4j-slf4j18-impl'

    testImplementation platform('org.junit:junit-bom:5.8.1')
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }
}

jar {
    // https://docs.aws.amazon.com/en_us/lambda/latest/dg/java-package.html#java-package-gradle
    from compileKotlin
    from processResources

    into('lib') {
        from configurations.runtimeClasspath
    }
}

task fatJar(type: Jar) {
    archiveClassifier = 'fat'

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }

    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}
